cart:
  title: "${player_name}'s Cart"
  # Available option is HORIZONTAL and VERTICAL
  page-mode: HORIZONTAL
  # The x character is the placeholder
  # for the history slot.
  structure:
    - "# # # # m # # # u"
    - "# x x x x x x x #"
    - "# x x x x x x x #"
    - "# # # @ # h # # n"
  icons:
    "#":
      base: brown_stained_glass_pane
      name: " "
      lore:
        - "<dark_gray>Wall"
        - " "
    "u":
      base: green_stained_glass_pane
      name: "<gray>Previous Page: ${current_page}/${total_page}"
      actions:
        left:
          - change_page(-1)
      icons:
        - condition: current_page == 1
          inherit: true
          icon:
            base: black_stained_glass_pane
    "n":
      base: red_stained_glass_pane
      name: "<gray>Next Page: ${current_page}/${total_page}"
      actions:
        left:
          - change_page(1)
      icons:
        - condition: current_page == total_page
          icon:
            base: black_stained_glass_pane
    "@":
      base: paper
      name: "<gray>Total Price: <white>${format_decimal(cart_total_price)}"
      lore:
        - " "
        - "<dark_gray>✖ <aqua><key:key.mouse.left>"
        - "   <gray>Settle Cart"
        - "<dark_gray>✖ <aqua>Shift + <key:key.mouse.right>"
        - "   <gray>Switch Cart Mode"
        - "   <gray>Current Mode: <white>${term(cart_shopping_mode)}"
        - "<dark_gray>✖ <aqua><key:key.mouse.right>"
        - "   <gray>Clean Cart"
        - "<dark_gray>✖ <white><key:key.drop>"
        - "   <gray>Clear Cart"
        - " "
      updata-period: 1s
      actions:
        left:
          - settle_cart()
        shift-right:
          - switch_cart_mode()
          - update_icon()
        right:
          - clean_cart()
        drop:
          - clear_cart()
    "m":
      base: chest
      name: "<gray>Shop List"
      lore:
        - " "
        - "<dark_gray>✖ <white>Go to shop list"
        - " "
      actions:
        left:
          - open_gui{id="main-1"}
    "h":
      base: book
      name: "<gray>Settlement Log"
      lore:
        - " "
        - "<dark_gray>✖ <white>Check your settlement log"
        - " "
      actions:
        left:
          - open_order_history()
  cart-product-icon:
    icon:
      name: "<dark_gray>Name: <reset>${product_name} <dark_gray>x <white>${product_amount}"
      lore:
        - " "
        - "<gray>Stack: <white>${stack}"
        - "<gray>Total Price: <white>${format_decimal(total_price)}"
        - " "
        - "<dark_gray>✖ <aqua><key:key.mouse.left>"
        - "   <gray>Add 1 stack"
        - "<dark_gray>✖ <aqua><key:key.mouse.right>"
        - "   <gray>Remove 1 stack"
        - "<dark_gray>✖ <aqua><key:key.drop>"
        - "   <gray>Remove this product"
        - "<dark_gray>✖ <aqua>Shift + <key:key.mouse.left>"
        - "   <gray>Input any amount as stack"
        - " "
      actions:
        left:
          - modify_order_stack{amount=1}
        right:
          - modify_order_stack{amount=-1}
        drop:
          - set_order_stack{amount=0}
        shift-left:
          - |
            anvil_input({
              structure: ["1 2 3"],
              icons: {
                1: {
                  base: "paper",
                  name: ""
                },
                2: {
                  base: "air"
                },
                3: {
                  base: "air"
                }
              }
            })
              .then((result) => {
                if (Number.isNumber(result)) {
                  set_order_stack{amount=Number.number(result)}
                }
              })
              .then(() => open_cart());
